name: Windows

on: [push]

# 设置环境变量
env:
  # https://cmake.org/cmake/help/latest/envvar/CTEST_OUTPUT_ON_FAILURE.html
  CTEST_OUTPUT_ON_FAILURE: true
  # https://devblogs.microsoft.com/cppblog/improved-parallelism-in-msbuild/
  UseMultiToolTask: true
  EnforceProcessCountAcrossBuilds: true
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: configure cmake
        run: |
          $env:MultiProcMaxCount = ((Get-CimInstance -ClassName Win32_Processor | Measure-Object -Property NumberOfLogicalProcessors -Sum).Sum + 1)
          # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
          # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
          cmake -B ${{github.workspace}}/build -D CMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: build
        run: |
          # Build your program with the given configuration.
          $env:MultiProcMaxCount = ((Get-CimInstance -ClassName Win32_Processor | Measure-Object -Property NumberOfLogicalProcessors -Sum).Sum + 1)
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
        
      - name: test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: |
          ctest --build-config ${{env.BUILD_TYPE}}

      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{github.workspace}}/build/Release/lua.exe
            ${{github.workspace}}/build/Release/luac.exe
